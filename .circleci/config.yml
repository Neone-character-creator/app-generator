# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/node:10

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    - persist_to_workspace:
        root: ~/repo
        paths:
          - ./

    # run tests!
    - run: npm test
  scan:
    docker:
    - image: circleci/java

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo
      - run: |
          curl https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip -o sonar.zip
          unzip sonar.zip
          export PATH=$PATH:sonar/bin

          sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner \
          -Dsonar.projectKey=Neone-character-creator_app-generator \
            -Dsonar.organization=neone-character-creator \
            -Dsonar.sources=lib \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=8043dfe146746b50ed05a60f3645b4e1d7eef71c

workflows:
  version: 2
  production:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - scan:
          requires:
            - build
          filters:
            branches:
              only:
                - master
