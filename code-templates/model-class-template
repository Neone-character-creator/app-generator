function ${name}Model(){
    Object.getOwnPropertyNames(this.__proto__.definition).forEach((property)=>{
        const propertyDef = this.__proto__.definition[property];
        if (propertyDef.type.match(/\[.*\]/)){
            this[property] = [];
        } else {
            this[property] = propertyDef.default !== undefined ? propertyDef.default : new module.exports[propertyDef.type]();
        }
        if (_.isArray(this[property])){
            // TODO: Add always present values perhaps?
        } else if (_.isObject(this[property])) {
            this[property] = {...this[property], ...propertyDef.value};
        }
    });
}

${name}Model.values = JSON.parse(`${values}`);

${name}Model.prototype.definition = JSON.parse(`${schema}`);