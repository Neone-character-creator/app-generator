import React from "react";
import { connect } from "react-redux";
import Textfield from "@material-ui/core/TextField";
import * as _ from "lodash";
${imports}

const Component = (props) => (
    <Textfield disabled={props.disabled} id="${componentName}-textfield" fullWidth label="${label}" value={props.boundValue} onChange={props.update} />
);

const boundExpression = "${bind}";
const readOnly = ${readOnly};

const connected = connect((state) => {
    const processingResults = [boundExpression, boundExpression];
    for(let i = 0;;i++){
        processingResults[i % 2] = resolveExpression(processingResults[i % 2], state)
        if (processingResults[0] === processingResults[1]){
            break;
        }
    }
    const boundValue = processingResults[0];
    return {
        boundValue,
        disabled: readOnly
    };
}, dispatch => {
    const update = _.debounce((value) => {
        dispatch({ type: "SET", path: boundExpression, value: value});
    });
    return {
        update: (event) => {
            if(!readOnly) {
                update(event.target.value);
            }
        }
    };
})(Component);

export default connected;

function resolveExpression(template, state){
    return _.template(template)(state);
}