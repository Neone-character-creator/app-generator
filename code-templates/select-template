import React from "react";
import { connect } from "react-redux";
import Textfield from "@material-ui/core/TextField";
import FormControl from "@material-ui/core/FormControl";
import InputLabel from "@material-ui/core/InputLabel";
import Select from "@material-ui/core/Select";
import MenuItem from "@material-ui/core/MenuItem";
import * as _ from "lodash";

import models from "../models";

const Component = (props) => (
    <FormControl>
    <InputLabel id="${componentName}-select-label">${label}</InputLabel>
    <Select id="${componentName}-select" children value={props.boundValue} onChange={props.update} children={props.options.map((item, index) => (<MenuItem value={item}>{_.get(item, itemTextPath)}</MenuItem>))} />
    </FormControl>
);

// The path of the bound portion of the state.
const boundPropertyPath = ${bind};
// The path of the select values.
const boundValuesPath = ${values};
const itemTextPath = ${itemText};
const readOnly = ${readOnly};
const connected = connect((state) => {
    const boundValue = _.get(state, boundPropertyPath, "");
    const options = determineValues(boundValuesPath);
    return {
        options,
        boundValue
    };
}, dispatch => {
    const update = _.debounce((value) => {
        dispatch({ type: "SET", path: boundPropertyPath, value: value});
    });
    return {
        update: (event) => {
            if(!readOnly) {
                update(event.target.value);
           }
        }
    };
})(Component);

function determineValues(expression){
    const expressionTokens = expression.split(".");
    switch(expressionTokens[0]){
        case "model":
            return _.get(models, expressionTokens.slice(1).join("."));
    }
}

export default connected;